create table "public"."levels" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "creator" text not null,
    "youtube_video_id" text not null
);


alter table "public"."levels" enable row level security;

create table "public"."user_roles" (
    "name" text not null,
    "add_level" boolean not null default false,
    "modify_level" boolean not null default false,
    "delete_level" boolean not null default false,
    "review_submission" boolean not null default false,
    "modify_record" boolean not null default false,
    "remove_record" boolean not null default false,
    "submit" boolean not null default true,
    "edit_own_profile" boolean not null default true
);


alter table "public"."user_roles" enable row level security;

create table "public"."users" (
    "user_id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "city" text,
    "province" text,
    "role" text not null default 'default'::text
);


alter table "public"."users" enable row level security;

CREATE UNIQUE INDEX levels_pkey ON public.levels USING btree (id);

CREATE UNIQUE INDEX roles_pkey ON public.user_roles USING btree (name);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (user_id);

alter table "public"."levels" add constraint "levels_pkey" PRIMARY KEY using index "levels_pkey";

alter table "public"."user_roles" add constraint "roles_pkey" PRIMARY KEY using index "roles_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."levels" add constraint "levels_creator_check" CHECK ((length(creator) > 0)) not valid;

alter table "public"."levels" validate constraint "levels_creator_check";

alter table "public"."levels" add constraint "levels_name_check" CHECK ((length(name) > 0)) not valid;

alter table "public"."levels" validate constraint "levels_name_check";

alter table "public"."levels" add constraint "levels_youtube_video_id_check" CHECK ((length(youtube_video_id) > 0)) not valid;

alter table "public"."levels" validate constraint "levels_youtube_video_id_check";

alter table "public"."users" add constraint "users_name_check" CHECK ((length(name) > 0)) not valid;

alter table "public"."users" validate constraint "users_name_check";

alter table "public"."users" add constraint "users_role_fkey" FOREIGN KEY (role) REFERENCES user_roles(name) not valid;

alter table "public"."users" validate constraint "users_role_fkey";

grant delete on table "public"."levels" to "anon";

grant insert on table "public"."levels" to "anon";

grant references on table "public"."levels" to "anon";

grant select on table "public"."levels" to "anon";

grant trigger on table "public"."levels" to "anon";

grant truncate on table "public"."levels" to "anon";

grant update on table "public"."levels" to "anon";

grant delete on table "public"."levels" to "authenticated";

grant insert on table "public"."levels" to "authenticated";

grant references on table "public"."levels" to "authenticated";

grant select on table "public"."levels" to "authenticated";

grant trigger on table "public"."levels" to "authenticated";

grant truncate on table "public"."levels" to "authenticated";

grant update on table "public"."levels" to "authenticated";

grant delete on table "public"."levels" to "service_role";

grant insert on table "public"."levels" to "service_role";

grant references on table "public"."levels" to "service_role";

grant select on table "public"."levels" to "service_role";

grant trigger on table "public"."levels" to "service_role";

grant truncate on table "public"."levels" to "service_role";

grant update on table "public"."levels" to "service_role";

grant delete on table "public"."user_roles" to "anon";

grant insert on table "public"."user_roles" to "anon";

grant references on table "public"."user_roles" to "anon";

grant select on table "public"."user_roles" to "anon";

grant trigger on table "public"."user_roles" to "anon";

grant truncate on table "public"."user_roles" to "anon";

grant update on table "public"."user_roles" to "anon";

grant delete on table "public"."user_roles" to "authenticated";

grant insert on table "public"."user_roles" to "authenticated";

grant references on table "public"."user_roles" to "authenticated";

grant select on table "public"."user_roles" to "authenticated";

grant trigger on table "public"."user_roles" to "authenticated";

grant truncate on table "public"."user_roles" to "authenticated";

grant update on table "public"."user_roles" to "authenticated";

grant delete on table "public"."user_roles" to "service_role";

grant insert on table "public"."user_roles" to "service_role";

grant references on table "public"."user_roles" to "service_role";

grant select on table "public"."user_roles" to "service_role";

grant trigger on table "public"."user_roles" to "service_role";

grant truncate on table "public"."user_roles" to "service_role";

grant update on table "public"."user_roles" to "service_role";

grant delete on table "public"."users" to "anon";

grant insert on table "public"."users" to "anon";

grant references on table "public"."users" to "anon";

grant select on table "public"."users" to "anon";

grant trigger on table "public"."users" to "anon";

grant truncate on table "public"."users" to "anon";

grant update on table "public"."users" to "anon";

grant delete on table "public"."users" to "authenticated";

grant insert on table "public"."users" to "authenticated";

grant references on table "public"."users" to "authenticated";

grant select on table "public"."users" to "authenticated";

grant trigger on table "public"."users" to "authenticated";

grant truncate on table "public"."users" to "authenticated";

grant update on table "public"."users" to "authenticated";

grant delete on table "public"."users" to "service_role";

grant insert on table "public"."users" to "service_role";

grant references on table "public"."users" to "service_role";

grant select on table "public"."users" to "service_role";

grant trigger on table "public"."users" to "service_role";

grant truncate on table "public"."users" to "service_role";

grant update on table "public"."users" to "service_role";


